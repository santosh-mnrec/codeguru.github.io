Angular is a prevalent web framework for developing front end application. Angular releases a major version every six months. Recently angular released Angular 9 with a lot of improvements and with some breaking changes.
In this post, I will share the new features introduced in Angular 9

### Compiler Changes
Angular nine uses `IVY` compiler by defaults initially it was in preview release

### CLI Build
Now CLI build by defaults uses `AOT` compilation with template type checking

### Typescript Support
Typescript 3.4 and 3.5 is no longer supported in Angular 9

### Removal of Deprecated API
Angular 9 removed depreciated API like Rendere is removed from `@angular/core` and is replaced with `Renderer2.`
You can check all the API that is deprecated from Angular 9 from the following URL
> [New Removals of Deprecated APIs](https://angular.io/guide/updating-to-version-9#new-removals-of-deprecated-apis)

### Better type checking
Just like typescript Angular 9 introduces stricket type checking. Apart from basic type check now Angular 9 provides one more type check, `strictTemplates`. 
For example let's suppose you have following 
`app.component.ts`
``` javascript
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  data:boolean=false;
}
```
`app.component.htm`
```html
<div>


  <div *ngFor="let p of data">

  </div>
 
</div> 
```
If you run the `ng serve` command in angular 8 you will not see any error during the build time. In angular 9 you can enabled `strictTemplates` check and you will see the template errors at build time.Like shown in the below figure


![](https://i.imgur.com/F4ssoPW.png)
You can enable the stricket type check in `tsconfig.json``
```json
{
  "compileOnSave": false,
  "compilerOptions": {
    "baseUrl": "./",
    "outDir": "./dist/out-tsc",
    "sourceMap": true,
    "declaration": false,
    "downlevelIteration": true,
    "experimentalDecorators": true,
    "module": "esnext",
    "moduleResolution": "node",
    "importHelpers": true,
    "target": "es2015",
    "lib": [
      "es2018",
      "dom"
    ]
  },
  "angularCompilerOptions": {
   
    "strictTemplates":true,
    "strictInjectionParameters": true
  }
}
```


### Improved Dependency Injection


 *Official Angular 9 documentation*

The  [offical documentation](https://next.angular.io/api/core/Injectable)  describes the new scopes as follows:

-   **'root'**  injector, which will be the application-level injector in most apps.
-   **'platform'**  injector, which would be the special singleton platform injector shared by all applications on the page.
-   **'any'**  injector, which would be the injector which receives the resolution. (Note this only works on NgModule Injectors and not on Element Injector)
<!--stackedit_data:
eyJoaXN0b3J5IjpbMTQ4ODI4NTcxNSw3MzQ1NzE5ODgsLTk3ND
YwNTY4LC0zNjQwNjc3NzAsNzMwOTk4MTE2XX0=
-->